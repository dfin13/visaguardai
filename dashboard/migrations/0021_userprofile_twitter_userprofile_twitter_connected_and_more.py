# Generated by Django 5.2.5 on 2025-10-16 02:59

import django.db.models.deletion
import encrypted_model_fields.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dashboard', '0020_remove_userprofile_twitter'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='userprofile',
            name='twitter',
            field=models.CharField(blank=True, max_length=150, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='twitter_connected',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='config',
            name='Apify_api_key',
            field=encrypted_model_fields.fields.EncryptedTextField(),
        ),
        migrations.AlterField(
            model_name='config',
            name='Gemini_api_key',
            field=encrypted_model_fields.fields.EncryptedTextField(),
        ),
        migrations.AlterField(
            model_name='config',
            name='STRIPE_SECRET_KEY_LIVE',
            field=encrypted_model_fields.fields.EncryptedTextField(),
        ),
        migrations.AlterField(
            model_name='config',
            name='STRIPE_SECRET_KEY_TEST',
            field=encrypted_model_fields.fields.EncryptedTextField(),
        ),
        migrations.AlterField(
            model_name='config',
            name='openrouter_api_key',
            field=encrypted_model_fields.fields.EncryptedTextField(),
        ),
        migrations.CreateModel(
            name='AnalysisResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('instagram', 'Instagram'), ('linkedin', 'LinkedIn'), ('twitter', 'Twitter/X'), ('facebook', 'Facebook')], max_length=20)),
                ('posts_data', models.JSONField(default=list, help_text='List of analyzed posts with content')),
                ('analysis_data', models.JSONField(default=dict, help_text='AI analysis results and risk scores')),
                ('profile_data', models.JSONField(default=dict, help_text='Profile assessment data')),
                ('analyzed_at', models.DateTimeField(auto_now_add=True)),
                ('payment_completed', models.BooleanField(default=False)),
                ('post_count', models.IntegerField(default=0)),
                ('overall_risk_score', models.IntegerField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='When this data should be cleaned up', null=True)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='results', to='dashboard.analysissession')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analysis_results', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-analyzed_at'],
                'indexes': [models.Index(fields=['user', '-analyzed_at'], name='dashboard_a_user_id_1744c3_idx'), models.Index(fields=['expires_at'], name='dashboard_a_expires_16cfbd_idx')],
            },
        ),
    ]
